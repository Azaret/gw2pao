<src:OverlayWindow x:Class="GW2PAO.Modules.Map.Views.MapView"
                   x:Name="MapViewWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:src="clr-namespace:GW2PAO.Views"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                   xmlns:resx="clr-namespace:GW2PAO.Properties"
                   xmlns:map="clr-namespace:MapControl;assembly=MapControl.WPF"
                   xmlns:converters="clr-namespace:GW2PAO.Converters"
                   xmlns:lconverters="clr-namespace:GW2PAO.Modules.Map.Converters"
                   xmlns:ctrls="clr-namespace:GW2PAO.Modules.Map.Views.Controls"
                   xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
                   xmlns:dd="clr-namespace:GW2PAO.PresentationCore.DragDrop;assembly=GW2PAO.PresentationCore"
                   xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   mc:Ignorable="d"
                   d:DesignHeight="200"
                   Top="{Binding Source={x:Static resx:Settings.Default}, Path=MapViewY}"
                   Left="{Binding Source={x:Static resx:Settings.Default}, Path=MapViewX}"
                   MinWidth="150"
                   Width="{Binding Source={x:Static resx:Settings.Default}, Path=MapViewWidth}"
                   Height="{Binding Source={x:Static resx:Settings.Default}, Path=MapViewHeight}"
                   WindowStyle="None"
                   AllowsTransparency="True"
                   Background="Transparent"
                   ResizeMode="NoResize"
                   Topmost="True"
                   ShowInTaskbar="False"
                   Closed="Window_Closed"
                   UseLayoutRounding="True"
                   SnapsToDevicePixels="True"
                   TextOptions.TextFormattingMode="Display">

    <src:OverlayWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <converters:ZoneItemTypeImageSrcConverter x:Key="ItemTypeImgConverter" />
        <converters:BoolToIndexConverter x:Key="BoolIndexConverter" />
        <lconverters:ContinentCoordToTileCoordConverter x:Key="CoordConverter" />
        <lconverters:ZoomToItemSizeConverter x:Key="ZoomToSizeConverter" />

        <map:TileLayer x:Key="GuildWars2TileLayer"
                       SourceName="GuildWars2"
                       TileSource="{Binding MapTileSourceString}"
                       MinZoomLevel="0"
                       MaxZoomLevel="7">
        </map:TileLayer>

        <Style x:Key="CharacterPositionMarkerStyle"
               TargetType="map:MapItem">
            <Setter Property="map:MapPanel.Location"
                    Value="{Binding CharacterPointer.CharacterLocation}" />
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <Grid Height="20" Width="20"
                              Margin="-10,-10,0,0"
                              RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter Content="{StaticResource CharacterPointer}"/>
                            <Grid.RenderTransform>
                                <RotateTransform Angle="{Binding CharacterPointer.CameraDirection}" />
                            </Grid.RenderTransform>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CharacterPointer.DisplayCharacterPointer}"
                                   Value="True" />
                        <Condition Binding="{Binding CharacterPointer.CanDisplayCharacterPointer}"
                                   Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PolylineItemStyle" TargetType="map:MapItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <map:MapPolyline Locations="{Binding Locations}" Stroke="Red" StrokeThickness="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ZoneItemStyle" TargetType="map:MapItem">
            <Setter Property="map:MapPanel.Location">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource CoordConverter}">
                        <Binding Path="ItemModel.ContinentLocation"/>
                        <Binding Path="DataContext.ContinentData" ElementName="MainPanel"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="Height"
                    Value="30" />
            <Setter Property="Width"
                    Value="30" />
            <Setter Property="Margin"
                    Value="-15,-15,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <CheckBox IsChecked="{Binding IsUnlocked}">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                <!--<Image MaxHeight="{Binding ElementName=Map, Path=ZoomLevel, Converter={StaticResource ZoomToSizeConverter}}"
                                                       MaxWidth="{Binding ElementName=Map, Path=ZoomLevel, Converter={StaticResource ZoomToSizeConverter}}">-->
                                                <Image>
                                                    <Image.Source>
                                                        <MultiBinding Converter="{StaticResource ItemTypeImgConverter}">
                                                            <Binding Path="ItemType"/>
                                                            <Binding Path="IsUnlocked"/>
                                                        </MultiBinding>
                                                    </Image.Source>
                                                </Image>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <TextBlock Text="{Binding ItemName}"
                                                       Foreground="White" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu>
                                                <MenuItem Header="{x:Static resx:Resources.CopyChatCode}"
                                                          Command="{Binding CopyChatCodeCommand}" />
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ItemName}"
                                                     Value="{x:Null}">
                                            <Setter Property="ToolTip"
                                                    Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                            <CheckBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static resx:Resources.CopyChatCode}" Command="{Binding CopyChatCodeCommand}" />
                                </ContextMenu>
                            </CheckBox.ContextMenu>
                            <CheckBox.ToolTip>
                                <TextBlock Text="{Binding ItemName}" Foreground="White"/>
                            </CheckBox.ToolTip>
                        </CheckBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                            Value="True">
                    <Setter Property="Height"
                            Value="36" />
                    <Setter Property="Width"
                            Value="36" />
                    <Setter Property="Margin"
                            Value="-18,-18,0,0" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="MarkerDragTemplate">
            <Image Source="{Binding Icon}"
                   Width="26"
                   Height="26" />
        </DataTemplate>

        <Style x:Key="DraggableMarkerIcon"
               TargetType="Image">
            <Setter Property="Width"
                    Value="25" />
            <Setter Property="Height"
                    Value="25" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}"
                             Value="True">
                    <Setter Property="Width"
                            Value="28" />
                    <Setter Property="Height"
                            Value="28" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="TaskDragTemplate">
            <Image Source="{Binding Icon}"
                   Width="26"
                   Height="26" />
        </DataTemplate>

        <ToolTip x:Key="PlayerTaskTooltip">
            <StackPanel>
                <TextBlock Text="{Binding Name}" />
                <TextBlock Text="{Binding Description}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Description}"
                                             Value="{x:Null}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Description}"
                                             Value="">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </ToolTip>
        
        <Style x:Key="PlayerTaskStyle"
               TargetType="map:MapItem">
            <Setter Property="map:MapPanel.Location">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource CoordConverter}">
                        <Binding Path="TaskContinentLocation" />
                        <Binding Path="DataContext.ContinentData"
                                 ElementName="MainPanel" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Height"
                    Value="50" />
            <Setter Property="Width"
                    Value="50" />
            <Setter Property="Margin"
                    Value="-25,-25,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <Grid Name="PlayerTaskMainPanel">
                            <Image Name="TaskIconImage"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Grid.Row="0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Height"
                                                Value="25" />
                                        <Setter Property="Width"
                                                Value="25" />
                                        <Setter Property="Source"
                                                Value="{Binding Icon}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Icon}"
                                                         Value="{x:Null}">
                                                <Setter Property="Source"
                                                        Value="/Images/Commerce/unknown_icon.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=IsCompletedCheckbox}"
                                                         Value="True">
                                                <Setter Property="Height"
                                                        Value="30" />
                                                <Setter Property="Width"
                                                        Value="30" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=EditTaskButton}"
                                                         Value="True">
                                                <Setter Property="Height"
                                                        Value="30" />
                                                <Setter Property="Width"
                                                        Value="30" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=DeleteButton}"
                                                         Value="True">
                                                <Setter Property="Height"
                                                        Value="30" />
                                                <Setter Property="Width"
                                                        Value="30" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=MoveButton}"
                                                         Value="True">
                                                <Setter Property="Height"
                                                        Value="30" />
                                                <Setter Property="Width"
                                                        Value="30" />
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Height"
                                                        Value="30" />
                                                <Setter Property="Width"
                                                        Value="30" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <CheckBox Name="IsCompletedCheckbox"
                                      IsChecked="{Binding IsTaskCompleted}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center">
                                <CheckBox.Style>
                                    <Style TargetType="{x:Type CheckBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                                    <fa:IconImage Icon="Check"
                                                                  Foreground="White"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity"
                                                Value="0" />
                                        <Setter Property="Height"
                                                Value="30" />
                                        <Setter Property="Width"
                                                Value="30" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".20" />
                                                <Setter Property="Height"
                                                        Value="35" />
                                                <Setter Property="Width"
                                                        Value="35" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=TaskIconImage}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".20" />
                                                <Setter Property="Height"
                                                        Value="35" />
                                                <Setter Property="Width"
                                                        Value="35" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsTaskCompleted}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value="0.80" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsTaskCompletable}"
                                                         Value="False">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <fa:IconImage Name="DeleteButton"
                                          Icon="TimesCircle"
                                          Foreground="Red"
                                          Width="18"
                                          Height="18"
                                          Margin="30,-35,0,0">
                                <fa:IconImage.Effect>
                                    <DropShadowEffect Color="Black"
                                                      ShadowDepth="0"
                                                      BlurRadius="3" />
                                </fa:IconImage.Effect>
                                <fa:IconImage.ToolTip>
                                    <TextBlock Text="{x:Static resx:Resources.Remove}" />
                                </fa:IconImage.ToolTip>
                                <fa:IconImage.InputBindings>
                                    <MouseBinding Command="{Binding DeleteCommand}"
                                                  MouseAction="LeftClick" />
                                </fa:IconImage.InputBindings>
                                <fa:IconImage.Style>
                                    <Style TargetType="fa:IconImage">
                                        <Setter Property="Opacity"
                                                Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=TaskIconImage}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".75" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=IsCompletedCheckbox}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".75" />
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Opacity"
                                                        Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </fa:IconImage.Style>
                            </fa:IconImage>
                            <fa:IconImage Name="MoveButton"
                                          Icon="Arrows"
                                          Foreground="White"
                                          Width="18"
                                          Height="18"
                                          Margin="-30,-35,0,0"
                                          dd:DragDropHelper.IsDragSource="True"
                                          dd:DragDropHelper.DragDropTemplate="{StaticResource TaskDragTemplate}">
                                <fa:IconImage.Effect>
                                    <DropShadowEffect Color="Black"
                                                      ShadowDepth="0"
                                                      BlurRadius="3" />
                                </fa:IconImage.Effect>
                                <fa:IconImage.ToolTip>
                                    <TextBlock Text="[[Move]]" />
                                </fa:IconImage.ToolTip>
                                <fa:IconImage.Style>
                                    <Style TargetType="fa:IconImage">
                                        <Setter Property="Opacity"
                                                Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=TaskIconImage}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".75" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=IsCompletedCheckbox}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".75" />
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Opacity"
                                                        Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </fa:IconImage.Style>
                            </fa:IconImage>
                            <fa:IconImage Name="EditTaskButton"
                                          Icon="Pencil"
                                          Foreground="LightGreen"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Bottom"
                                          Width="15"
                                          Height="15"
                                          Margin="-30,35,0,0">
                                <fa:IconImage.Effect>
                                    <DropShadowEffect Color="Black"
                                                      ShadowDepth="0"
                                                      BlurRadius="3" />
                                </fa:IconImage.Effect>
                                <fa:IconImage.ToolTip>
                                    <TextBlock Text="{x:Static resx:Resources.Edit}" />
                                </fa:IconImage.ToolTip>
                                <fa:IconImage.InputBindings>
                                    <MouseBinding Command="{Binding EditCommand}"
                                                  MouseAction="LeftClick" />
                                </fa:IconImage.InputBindings>
                                <fa:IconImage.Style>
                                    <Style TargetType="fa:IconImage">
                                        <Setter Property="Opacity"
                                                Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=TaskIconImage}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".75" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=IsCompletedCheckbox}"
                                                         Value="True">
                                                <Setter Property="Opacity"
                                                        Value=".75" />
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Opacity"
                                                        Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </fa:IconImage.Style>
                            </fa:IconImage>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility"
                    Value="Visible" />
            <Setter Property="ToolTip"
                    Value="{StaticResource PlayerTaskTooltip}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasContinentLocation}"
                             Value="False">
                    <DataTrigger.Setters>
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}"
                             Value="{x:Null}">
                    <Setter Property="ToolTip"
                            Value="{x:Null}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}"
                             Value="">
                    <Setter Property="ToolTip"
                            Value="{x:Null}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <map:MapItemsControl x:Key="PlayerTaskItemsControl"
                             ItemsSource="{Binding MapMarkers.PlayerMarkers}"
                             ItemContainerStyle="{StaticResource PlayerTaskStyle}"
                             IsSynchronizedWithCurrentItem="True"
                             SelectionMode="Extended" />


    </src:OverlayWindow.Resources>

    <Grid Name="MainPanel">

        <ctrls:Map x:Name="Map"
                   MinZoomLevel="2" ZoomLevel="6" MaxZoomLevel="10"
                   MouseWheelZoomDelta="0.5"
                   MouseLeftButtonDown="MapMouseLeftButtonDown"
                   MouseRightButtonDown="MapMouseRightButtonDown"
                   MouseLeftButtonUp="TestMap_MouseLeftButtonUp"
                   MouseMove="MapMouseMove"
                   MouseLeave="MapMouseLeave"
                   ManipulationInertiaStarting="MapManipulationInertiaStarting"
                   TileLayer="{StaticResource GuildWars2TileLayer}"
                   TargetCenter="{Binding MapCenter}"
                   dd:DragDropHelper.IsDropTarget="True"
                   dd:DragDropHelper.TargetItemsControl="{StaticResource PlayerTaskItemsControl}"
                   dd:DragDropHelper.OnDrop="Map_OnDrop">
            <ctrls:Map.Style>
                <Style TargetType="ctrls:Map">
                    <Setter Property="ManipulationMode" Value="All" />
                    <Style.Triggers>
                        <!--<DataTrigger Binding="{Binding PenEnabled}" Value="True">
                                <Setter Property="ManipulationMode" Value="None" />
                            </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </ctrls:Map.Style>

            <map:MapItemsControl ItemsSource="{Binding ZoneItems.Waypoints}"
                                 ItemContainerStyle="{StaticResource ZoneItemStyle}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Extended"
                                 Visibility="{Binding ZoneItems.ShowWaypoints, Converter={StaticResource BoolToVisibility}}" />

            <map:MapItemsControl ItemsSource="{Binding ZoneItems.POIs}"
                                 ItemContainerStyle="{StaticResource ZoneItemStyle}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Extended"
                                 Visibility="{Binding ZoneItems.ShowPOIs, Converter={StaticResource BoolToVisibility}}" />

            <map:MapItemsControl ItemsSource="{Binding ZoneItems.Vistas}"
                                 ItemContainerStyle="{StaticResource ZoneItemStyle}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Extended"
                                 Visibility="{Binding ZoneItems.ShowVistas, Converter={StaticResource BoolToVisibility}}" />

            <map:MapItemsControl ItemsSource="{Binding ZoneItems.HeartQuests}"
                                 ItemContainerStyle="{StaticResource ZoneItemStyle}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Extended"
                                 Visibility="{Binding ZoneItems.ShowHeartQuests, Converter={StaticResource BoolToVisibility}}" />

            <map:MapItemsControl ItemsSource="{Binding ZoneItems.HeroPoints}"
                                 ItemContainerStyle="{StaticResource ZoneItemStyle}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Extended"
                                 Visibility="{Binding ZoneItems.ShowHeroPoints, Converter={StaticResource BoolToVisibility}}" />

            <!--<ContentControl Content="{StaticResource MapMarkerItemsControl}" />-->
            <ContentControl Content="{StaticResource PlayerTaskItemsControl}" />

            <map:MapItem Name="CharacterMarker"
                         Style="{StaticResource CharacterPositionMarkerStyle}" />

            <!--TODO: Make stroke color configurable-->
            <map:MapPolyline Locations="{Binding CharacterPointer.PlayerTrail}"
                             Stroke="White"
                             StrokeThickness="3"
                             Opacity="0.85"
                             Visibility="{Binding CharacterPointer.ShowPlayerTrail, Converter={StaticResource BoolToVisibility}}">
            </map:MapPolyline>

            <!--<map:MapItemsControl Name="PenLinesControl"
                                 ItemsSource="{Binding PenLines}"
                                 ItemTemplate="{StaticResource PolylineItemTemplate}"
                                 IsSynchronizedWithCurrentItem="True"/>-->

            
        </ctrls:Map>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Name="TitleBar"
                    MouseLeftButtonDown="TitleBar_MouseLeftButtonDown"
                    Grid.Row="0"
                    Background="#80000000">
                <Grid Margin="5,0,0,0"
                      Height="30">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Image Name="TitleImage"
                           Grid.Column="0"
                           VerticalAlignment="Center"
                           Height="30"
                           Width="30"
                           Margin="0,0,0,0"
                           Source="/Images/Title/zone.png"
                           MouseDown="TitleImage_MouseDown">
                        <Image.ContextMenu>
                            <ContextMenu Name="MainMenu">
                                <MenuItem Header="{x:Static resx:Resources.Close}"
                                          Click="CloseWindowButton_Click" />
                            </ContextMenu>
                        </Image.ContextMenu>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0"
                                                          Color="Goldenrod"
                                                          Opacity="0"
                                                          BlurRadius="10" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="1"
                                                                     Storyboard.TargetProperty="(Effect).Opacity"
                                                                     Duration="00:00:00.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="0"
                                                                     Storyboard.TargetProperty="(Effect).Opacity"
                                                                     Duration="00:00:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <core:OutlinedTextBlock Grid.Column="1"
                                            Margin="5,0,0,0"
                                            VerticalAlignment="Center"
                                            Fill="PaleGoldenrod"
                                            FontFamily="./Style/Fonts/#Menomonia"
                                            FontSize="17"
                                            Text="[[Map]]" />

                    <Button Name="MaximizeButton"
                            Grid.Column="2"
                            Margin="3"
                            Click="MaximizeButton_Click"
                            Style="{StaticResource TitleBarButtonStyle}">
                        <Button.Content>
                            <fa:IconBlock Icon="ArrowsAlt" />
                        </Button.Content>
                    </Button>

                    <Button Name="CollapseExpandButton"
                            Grid.Column="3"
                            Margin="3"
                            Click="CollapseExpandButton_Click">
                        <Button.Style>
                            <Style TargetType="Button"
                                   BasedOn="{StaticResource TitleBarButtonStyle}">
                                <Setter Property="Content"
                                        Value="{StaticResource CollapseGraphic}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Visibility, ElementName=ControlsPanel}"
                                                 Value="Collapsed">
                                        <DataTrigger.Setters>
                                            <Setter Property="Content"
                                                    Value="{StaticResource ExpandGraphic}" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Name="CloseWindowButton"
                            Grid.Column="4"
                            Margin="3,3,5,3"
                            Style="{StaticResource TitleBarButtonStyle}"
                            Content="{StaticResource CloseGraphic}"
                            Click="CloseWindowButton_Click" />
                </Grid>
                <Border.Style>
                    <Style TargetType="Border"
                           BasedOn="{StaticResource TitleBarStyle}">
                        <Setter Property="Opacity"
                                Value="1" />
                        <Setter Property="Visibility"
                                Value="Visible" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=MainPanel, Path=IsMouseOver}"
                                               Value="False" />
                                    <Condition Binding="{Binding ElementName=ControlsPanel, Path=Visibility}"
                                               Value="Visible" />
                                    <Condition Binding="{Binding ElementName=MainMenu, Path=IsOpen}"
                                               Value="False" />
                                    <Condition Binding="{Binding Source={x:Static resx:Settings.Default}, Path=AutoHideTitleBars}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:00.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding ElementName=MapViewWindow, Path=WindowState}"
                                         Value="Maximized">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <Grid Name="ControlsPanel"
                  Margin="5,15,5,5"
                  Grid.Row="1">
                <Grid.Resources>
                    <Style TargetType="fa:IconImage">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="Black"
                                                  BlurRadius="3"
                                                  ShadowDepth="0" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>

                <Button Name="RestoreButton"
                        Grid.Row="0"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Margin="3"
                        Height="30"
                        Width="30"
                        Click="RestoreButton_Click">
                    <Button.Content>
                        <fa:IconBlock Icon="Compress"
                                      FontSize="24" />
                    </Button.Content>
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=MapViewWindow, Path=WindowState}"
                                             Value="Maximized">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <ctrls:MapSettingControl Grid.Row="0"
                                         Grid.Column="0"
                                         VerticalAlignment="Top"
                                         Icon="Eye">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Row="0"
                                  Grid.Column="0"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding ZoneItems.ShowWaypoints}"
                                  ToolTip="[[Show Waypoints]]">
                            <Image Source="/Images/Zone/waypoints.png"
                                   Height="25"
                                   Width="25" />
                        </CheckBox>
                        <CheckBox Grid.Row="0"
                                  Grid.Column="1"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding ZoneItems.ShowPOIs}"
                                  ToolTip="[[Show Points of Interest]]">
                            <Image Source="/Images/Zone/poi.png"
                                   Height="25"
                                   Width="25" />
                        </CheckBox>
                        <CheckBox Grid.Row="0"
                                  Grid.Column="2"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding ZoneItems.ShowVistas}"
                                  ToolTip="[[Show Vistas]]">
                            <Image Source="/Images/Zone/vistas.png"
                                   Height="25"
                                   Width="25" />
                        </CheckBox>
                        <CheckBox Grid.Row="0"
                                  Grid.Column="3"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding ZoneItems.ShowHeartQuests}"
                                  ToolTip="[[Show Heart Quests]]">
                            <Image Source="/Images/Zone/hearts.png"
                                   Height="25"
                                   Width="25" />
                        </CheckBox>
                        <CheckBox Grid.Row="0"
                                  Grid.Column="4"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding ZoneItems.ShowHeroPoints}"
                                  ToolTip="[[Show Hero Points]]">
                            <Image Source="/Images/Zone/heropoint.png"
                                   Height="25"
                                   Width="25" />
                        </CheckBox>

                        <StackPanel Grid.Row="1"
                                    Grid.ColumnSpan="5"
                                    Margin="5,2,0,0"
                                    Orientation="Horizontal">
                            <core:OutlinedTextBlock VerticalAlignment="Center"
                                                    FontSize="13"
                                                    Text="{x:Static resx:Resources.Show}" />
                            <ComboBox HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="5,4,0,0"
                                      Height="20"
                                      Width="150"
                                      SelectedIndex="{Binding ZoneItems.ShowEntireContinent, Converter={StaticResource BoolIndexConverter}}">
                                <ComboBoxItem>
                                    <TextBlock Text="[[Entire Continent]]" />
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <TextBlock Text="{x:Static resx:Resources.CurrentZone}" />
                                </ComboBoxItem>
                            </ComboBox>
                        </StackPanel>

                    </Grid>
                </ctrls:MapSettingControl>

                <ctrls:MapSettingControl Grid.Row="1"
                                         Grid.Column="0"
                                         VerticalAlignment="Top"
                                         HorizontalAlignment="Left"
                                         Icon="LocationArrow"
                                         IsEnabled="{Binding CharacterPointer.CanDisplayCharacterPointer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding CharacterPointer.DisplayCharacterPointer}"
                                  VerticalAlignment="Center"
                                  ToolTip="[[Show Character Pointer]]">
                            <ContentPresenter Content="{StaticResource CharacterPointer}"
                                              Height="20" />
                        </CheckBox>
                        <CheckBox Grid.Column="1"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding CharacterPointer.SnapToCharacter}"
                                  VerticalAlignment="Center">
                            <core:OutlinedTextBlock Text="[[Center Map on Character]]" />
                        </CheckBox>
                        <CheckBox Grid.Column="2"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="5"
                                  IsChecked="{Binding CharacterPointer.ShowPlayerTrail}"
                                  VerticalAlignment="Center"
                                  ToolTip="[[Show Character Trail]]">
                            <core:OutlinedTextBlock Text="[[Trail]]" />
                        </CheckBox>
                        <Slider VerticalAlignment="Center"
                                Grid.Column="3"
                                Margin="5"
                                Width="100"
                                Minimum="5"
                                Value="{Binding CharacterPointer.PlayerTrailMaxLength}"
                                Maximum="2500"
                                ToolTip="[[Trail Length]]">
                        </Slider>
                    </Grid>
                </ctrls:MapSettingControl>

                <ctrls:MapSettingControl Grid.Row="2"
                                         Grid.Column="0"
                                         VerticalAlignment="Top"
                                         HorizontalAlignment="Left"
                                         Margin="0,10,0,0"
                                         Icon="MapMarker">
                    <ItemsControl ItemsSource="{Binding MapMarkers.MarkerTemplates}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel MaxWidth="350" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="30"
                                      Height="30"
                                      Margin="5,5,0,0"
                                      dd:DragDropHelper.IsDragSource="True"
                                      dd:DragDropHelper.DragDropTemplate="{StaticResource TaskDragTemplate}">
                                    <Image Source="{Binding Icon}"
                                           Style="{StaticResource DraggableMarkerIcon}" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ctrls:MapSettingControl>

                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Opacity"
                                Value="1" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=MainPanel, Path=IsMouseOver}"
                                               Value="False" />
                                    <Condition Binding="{Binding ElementName=MainMenu, Path=IsOpen}"
                                               Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:00.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

        </Grid>

        <Grid Name="ResizeGripper">
            <ResizeGrip HorizontalAlignment="Right"
                        VerticalAlignment="Bottom" />
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainPanel, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding ElementName=MainMenu, Path=IsOpen}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:00.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=MapViewWindow, Path=WindowState}" Value="Maximized">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</src:OverlayWindow>
