<UserControl x:Class="GW2PAO.Modules.Commerce.Views.CommerceSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:view="clr-namespace:GW2PAO.Modules.Commerce.Views"
             xmlns:resx="clr-namespace:GW2PAO.Properties"
             xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
             xmlns:auto="clr-namespace:FeserWard.Controls;assembly=IntelliBox"
             xmlns:converters="clr-namespace:GW2PAO.Converters"
             mc:Ignorable="d"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True">

    <UserControl.Resources>
        <converters:BoolToVisibleHiddenConverter x:Key="BoolToVisibility" />
        <core:AutoRefreshCollectionViewSource Source="{Binding MonitoredItemsConfigViewModel.ItemPrices}" x:Key="ItemPricesCollection"/>

        <DockPanel x:Key="RemoveGraphic" Height="8">
            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                    Stretch="Uniform"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                    StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                    StrokeThickness="2">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigure StartPoint="0,0">
                                <LineSegment Point="20,20"/>
                            </PathFigure>
                            <PathFigure StartPoint="0,20">
                                <LineSegment Point="20,0"/>
                            </PathFigure>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
        </DockPanel>

        <SolidColorBrush x:Key="TextBoxBorder" Color="PaleGoldenrod" Opacity="0.5" />

        <auto:IntelliboxAlternateRowColorizer x:Key="IntelliboxRowColorizer" EvenRowBrush="Black" OddRowBrush="Black" />

    </UserControl.Resources>

    <StackPanel Orientation="Vertical"
                Margin="15,5,10,0">
        <!-- Tracked Items Configuration -->
        <GroupBox Height="330">
            <GroupBox.Header>
                <core:OutlinedTextBlock Text="{x:Static resx:Resources.TrackedItems}" />
            </GroupBox.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ItemListColumn" Width="150" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ListView x:Name='ItemsListView'
                          Grid.Column="0" Grid.Row="0"
                          ItemsSource="{Binding MonitoredItemsConfigViewModel.ItemPrices}"
                          ButtonBase.Click="ListViewColumnHeader_Click">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="141"
                                            Header="{x:Static resx:Resources.Item}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Margin="1">
                                            <core:OutlinedTextBlock Text="{Binding ItemName}" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>

                <!-- Item Details Panel -->
                <Border Grid.Column="1" Grid.Row="0" BorderBrush="Black" BorderThickness="1" Margin="5,0,0,0">
                    <StackPanel Margin="10,2,10,2"
                                DataContext="{Binding SelectedItem, ElementName=ItemsListView}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        
                            <!-- Item's Icon -->
                            <Border Grid.Column="0"
                                    Margin="5,5,5,10"
                                    BorderBrush="Black" BorderThickness="2">
                                <Image Width="50" Height="50"
                                       Source="{Binding IconUrl}" />
                            </Border>

                            <!-- Item's Name -->
                            <core:OutlinedTextBlock Grid.Column="1"
                                                    VerticalAlignment="Center"
                                                    FontSize="14"
                                                    Margin="5,5,20,5"
                                                    Text="{Binding ItemName}" />

                            <!-- Remove Button -->
                            <Button Grid.Column="2"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Right"
                                    Margin="0,5,0,0"
                                    Content="{x:Static resx:Resources.Remove}"
                                    Command="{Binding RemoveCommand}"/>
                        </Grid>

                        <!--Current Prices-->
                        <Grid Margin="20,5,5,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <core:OutlinedTextBlock Grid.Row="0" Grid.Column="0"
                                                    FontSize="12"
                                                    Text="{x:Static resx:Resources.CurrentHighestBuyOrder}" />
                            <view:ReadonlyPriceView Grid.Row="0" Grid.Column="1"
                                                    Margin="5,0,0,0"
                                                    Price="{Binding CurrentBuyOrder}" />
                            <core:OutlinedTextBlock Grid.Row="1" Grid.Column="0"
                                                    FontSize="12"
                                                    Text="{x:Static resx:Resources.CurrentLowestSellListing}" />
                            <view:ReadonlyPriceView Grid.Row="1" Grid.Column="1"
                                                    Margin="5,0,0,0"
                                                    Price="{Binding CurrentSellListing}" />
                        </Grid>

                        <!--Buy Order-->
                        <Grid Margin="0,15,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <core:OutlinedTextBlock Grid.Column="0" Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    VerticalAlignment="Center"
                                                    TextAlignment="Center"
                                                    FontSize="12"
                                                    Text="{x:Static resx:Resources.BuyOrder}" />
                            <!--Upper Limit-->
                            <CheckBox Grid.Column="1" Grid.Row="0"
                                      Style="{StaticResource AlternateCheckboxStyle}"
                                      Margin="10,0,5,0"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding Data.IsBuyOrderUpperLimitEnabled}">
                                <core:OutlinedTextBlock Margin="0,1,0,0" Text="{x:Static resx:Resources.Upper}" />
                            </CheckBox>
                            <Grid Grid.Column="2" Grid.Row="0"
                                  VerticalAlignment="Center"
                                  Margin="0,2,0,2"
                                  Visibility="{Binding Data.IsBuyOrderUpperLimitEnabled, Converter={StaticResource BoolToVisibility}}">
                                <view:PriceView DataContext="{Binding Data.BuyOrderUpperLimit}"/>
                            </Grid>

                            <!--Lower Limit-->
                            <CheckBox Grid.Column="1" Grid.Row="1"
                                      Style="{StaticResource AlternateCheckboxStyle}"
                                      Margin="10,0,5,0"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding Data.IsBuyOrderLowerLimitEnabled}">
                                <core:OutlinedTextBlock Margin="0,1,0,0" Text="{x:Static resx:Resources.Lower}" />
                            </CheckBox>
                            <Grid Grid.Column="2" Grid.Row="1"
                                  Margin="0,2,0,2"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding Data.IsBuyOrderLowerLimitEnabled, Converter={StaticResource BoolToVisibility}}">
                                <view:PriceView DataContext="{Binding Data.BuyOrderLowerLimit}"/>
                            </Grid>
                        </Grid>

                        <!--Sell Listing-->
                        <Grid Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <core:OutlinedTextBlock Grid.Column="0" Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    VerticalAlignment="Center"
                                                    TextAlignment="Center"
                                                    FontSize="12"
                                                    Text="{x:Static resx:Resources.SellListing}" />
                            <!--Upper Limit-->
                            <CheckBox Grid.Column="1" Grid.Row="0"
                                      Style="{StaticResource AlternateCheckboxStyle}"
                                      Margin="10,0,5,0" VerticalAlignment="Center"
                                      IsChecked="{Binding Data.IsSellListingUpperLimitEnabled}">
                                <core:OutlinedTextBlock Margin="0,1,0,0" Text="{x:Static resx:Resources.Upper}" />
                            </CheckBox>
                            <Grid Grid.Column="2" Grid.Row="0"
                                  Margin="0,2,0,2"
                                  HorizontalAlignment="Left"
                                  Visibility="{Binding Data.IsSellListingUpperLimitEnabled, Converter={StaticResource BoolToVisibility}}">
                                <view:PriceView DataContext="{Binding Data.SellListingUpperLimit}"/>
                            </Grid>

                            <!--Lower Limit-->
                            <CheckBox Grid.Column="1" Grid.Row="1"
                                      Style="{StaticResource AlternateCheckboxStyle}"
                                      Margin="10,0,5,0" VerticalAlignment="Center"
                                      IsChecked="{Binding Data.IsSellListingLowerLimitEnabled}">
                                <core:OutlinedTextBlock Margin="0,1,0,0" Text="{x:Static resx:Resources.Lower}" />
                            </CheckBox>
                            <Grid Grid.Column="2" Grid.Row="1"
                                  Margin="0,2,0,2"
                                  HorizontalAlignment="Left"
                                  Visibility="{Binding Data.IsSellListingLowerLimitEnabled, Converter={StaticResource BoolToVisibility}}">
                                <view:PriceView DataContext="{Binding Data.SellListingLowerLimit}"/>
                            </Grid>
                        </Grid>
                        
                        <StackPanel.Style>
                            <Style TargetType="StackPanel" >
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>
                </Border>
                
                <!-- Add Item Box -->
                <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Item's Name/Item Selection -->
                    <Grid Grid.Column="0">
                        <Grid.Resources>

                            <Style x:Key="CustomListViewItems" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <EventSetter Event="MouseUp" Handler="OnIntelliboxSuggestItem_MouseUp" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border x:Name="Border"
                                                    Margin="1" Padding="0,2,0,2"
                                                    SnapsToDevicePixels="true"
                                                    Background="Transparent" CornerRadius="0">
                                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Border" Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="PaleGoldenrod" Opacity="0.5" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="PaleGoldenrod" Opacity="0.15" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="{x:Type ListView}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.75" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="ItemContainerStyle" Value="{StaticResource CustomListViewItems}" />
                            </Style>

                            <Style TargetType="Border">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.8" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Transparent" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White" />
                            </Style>
                        </Grid.Resources>
                        <auto:Intellibox Name="ItemsEntryBox"
                                         HideColumnHeaders="True" DisableWhitespaceTrim="True" SelectAllOnFocus="True" 
                                         MaxResults="20"
                                         WatermarkText="{x:Static resx:Resources.ItemName}"
                                         WatermarkForeground="Gray"
                                         Height="21"
                                         MinimumPrefixLength="2"
                                         DataProvider="{Binding MonitoredItemsConfigViewModel.ItemsProvider}"
                                         SelectedItem="{Binding MonitoredItemsConfigViewModel.SelectedItem}"
                                         DisplayedValueBinding="{Binding Name}"
                                         RowColorizer="{StaticResource IntelliboxRowColorizer}">
                            <auto:Intellibox.Columns>
                                <auto:IntelliboxColumn ForProperty="ID"  Hide="True" />
                            </auto:Intellibox.Columns>
                        </auto:Intellibox>
                    </Grid>

                    <Button Grid.Column="1"
                            Margin="5"
                            Width="50" HorizontalAlignment="Left"
                            Content="{x:Static resx:Resources.Add}"
                            Command="{Binding MonitoredItemsConfigViewModel.AddCommand}"/>
                </Grid>
            </Grid>
        </GroupBox>

        <!-- Notifications Configuration -->
        <Grid Margin="0,5,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
            <CheckBox Grid.Column="0" Grid.Row="0"
                      Style="{StaticResource AlternateCheckboxStyle}"
                      IsChecked="{Binding UserData.AreBuyOrderPriceNotificationsEnabled}">
                <core:OutlinedTextBlock VerticalAlignment="Center"
                                        Text="{x:Static resx:Resources.BuyOrderPriceNotifications}"/>
            </CheckBox>
            <CheckBox Grid.Column="0" Grid.Row="1"
                      Margin="0,5,0,0"
                      Style="{StaticResource AlternateCheckboxStyle}"
                      IsChecked="{Binding UserData.AreSellListingPriceNotificationsEnabled}">
                <core:OutlinedTextBlock VerticalAlignment="Center"
                                        Text="{x:Static resx:Resources.SellListingPriceNotifications}"/>
            </CheckBox>
            
            <core:OutlinedTextBlock Grid.Column="1" Grid.Row="0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"
                                    Text="{x:Static resx:Resources.RedisplayNotificationsIntervalMinutes}"/>
            <TextBox Grid.Column="2" Grid.Row="0"
                     Margin="3,0,0,1"
                     VerticalAlignment="Center"
                     Height="10" Width="35"
                     Text="{Binding UserData.ResetPriceNotificationsInterval, UpdateSourceTrigger=PropertyChanged}" />

            <core:OutlinedTextBlock Grid.Column="1" Grid.Row="1"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"
                                    Text="{Binding Source={x:Static resx:Resources.NotificationsDuration}, StringFormat={}{0}:}" />
            <TextBox Grid.Column="2" Grid.Row="1"
                     Margin="3,1,0,0"
                     Height="10" Width="35"
                     Text="{Binding UserData.NotificationDuration, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        
        <!--Items Database Rebuild Button-->
        <Button MinWidth="250"
                MaxWidth="400"
                Margin="5"
                Command="{Binding RebuildNamesDatabaseCommand}">
            <TextBlock Text="{x:Static resx:Resources.RebuildItemNamesDatabase}" />
        </Button>
    </StackPanel>
</UserControl>
